services:
  timescaledb:
    image: timescaledev/timescaledb-ha:pg12-latest
    container_name: timescaledb
    networks:
      - trading_bot
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: bot_user
      POSTGRES_PASSWORD: bot_password
      POSTGRES_DB: trading_bot
    volumes:
      - timescale_data:/var/lib/postgresql/data
      - ./init_timescale.sql:/docker-entrypoint-initdb.d/init_timescale.sql
    restart: always

  redis:
    image: redis:latest
    container_name: redis
    networks:
      - trading_bot
    ports:
      - "6379:6379"
    restart: always

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    networks:
      - trading_bot
    ports:
      - "9090:9090"
    volumes:
      - ../monitoring/prometheus.yaml:/etc/prometheus/prometheus.yml
    restart: always

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    networks:
      - trading_bot
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    restart: always

  redis_exporter:
    image: oliver006/redis_exporter:latest
    container_name: redis_exporter
    networks:
      - trading_bot
    ports:
      - "9121:9121"
    environment:
      - REDIS_ADDR=redis:6379
    restart: always

  promscale:
    image: timescale/promscale:latest
    container_name: promscale
    networks:
      - trading_bot
    ports:
      - "9201:9201"
    depends_on:
      - timescaledb
    # environment:
    #   - TS_PROM_DB_HOST=timescaledb
    #   - TS_PROM_DB_PORT=5432
    #   - TS_PROM_DB_USER=bot_user
    #   - TS_PROM_DB_PASSWORD=bot_password
    #   - TS_PROM_DB_NAME=trading_bot
    environment:
      - PROMSCALE_DB_URI=postgres://bot_user:bot_password@timescaledb:5432/trading_bot?sslmode=disable

    restart: always

volumes:
  timescale_data:
  grafana_data:

networks:
  trading_bot:
    external: true
